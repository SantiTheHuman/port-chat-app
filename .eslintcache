[{"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js":"1","C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js":"2","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js":"3","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js":"4","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js":"5","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js":"6","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js":"7","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js":"8","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js":"9","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js":"10","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js":"11","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\AddConnection.js":"12","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\Contacts.js":"13","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatWindow.js":"14","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\InputArea.js":"15","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatLog.js":"16","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\WelcomeScreen\\LogIn.js":"17","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\Header.js":"18","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\ConnsMenu.js":"19","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\UIContext.js":"20","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\AnimatedNav.js":"21"},{"size":499,"mtime":1614622353353,"results":"22","hashOfConfig":"23"},{"size":930,"mtime":1614876227784,"results":"24","hashOfConfig":"23"},{"size":2896,"mtime":1614622353345,"results":"25","hashOfConfig":"23"},{"size":1209,"mtime":1614622353327,"results":"26","hashOfConfig":"23"},{"size":2327,"mtime":1614622353304,"results":"27","hashOfConfig":"23"},{"size":323,"mtime":1614522393431,"results":"28","hashOfConfig":"23"},{"size":2690,"mtime":1614720705443,"results":"29","hashOfConfig":"23"},{"size":2260,"mtime":1613573251569,"results":"30","hashOfConfig":"23"},{"size":2112,"mtime":1613661270475,"results":"31","hashOfConfig":"23"},{"size":592,"mtime":1613726205992,"results":"32","hashOfConfig":"23"},{"size":1535,"mtime":1613728610379,"results":"33","hashOfConfig":"23"},{"size":2074,"mtime":1614877951394,"results":"34","hashOfConfig":"23"},{"size":2155,"mtime":1614871371012,"results":"35","hashOfConfig":"23"},{"size":416,"mtime":1614876237338,"results":"36","hashOfConfig":"23"},{"size":1473,"mtime":1614869654031,"results":"37","hashOfConfig":"23"},{"size":1132,"mtime":1614878602273,"results":"38","hashOfConfig":"23"},{"size":3106,"mtime":1614711696472,"results":"39","hashOfConfig":"23"},{"size":3397,"mtime":1614622353295,"results":"40","hashOfConfig":"23"},{"size":579,"mtime":1614868382386,"results":"41","hashOfConfig":"23"},{"size":2205,"mtime":1614869088907,"results":"42","hashOfConfig":"23"},{"size":1228,"mtime":1614622353293,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ej3mat",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js",["92","93","94","95"],"import { io } from \"socket.io-client\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const { user } = useAuth();\r\n  const {\r\n    contactsList,\r\n    setChatLog,\r\n    currConversation,\r\n    updateOnlineStatus,\r\n    updateLiveStatus,\r\n    theirLiveText,\r\n    setTheirLiveText,\r\n  } = useChat();\r\n  // const [theirLiveCursor, setTheirLiveCursor] = useState(0);\r\n\r\n  const startSocketConnection = (userObj) => {\r\n    setSocket(\r\n      io(`${process.env.REACT_APP_PORT_SERVER}/chat`, {\r\n        query: userObj,\r\n        withCredentials: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const isContact = async (userData) => {\r\n    if (contactsList) {\r\n      const found = await contactsList.find(\r\n        (contact) => userData.userId === contact._id\r\n      );\r\n      return found ? true : false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const clientIsRecipient = (userData) => {\r\n    const answer = userData.recipientId === user._id;\r\n    return answer;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket.on(\"connect\", () => {\r\n        socket.emit(\"online status\", { userId: user._id, isOnline: true });\r\n        console.log(`Send status: ${user.username} is online.`);\r\n      });\r\n\r\n      socket.on(\"user status update\", (userData) => {\r\n        const userIsContact = isContact(userData);\r\n        if (userIsContact) {\r\n          updateOnlineStatus(userData);\r\n        }\r\n        socket.emit(\"user status back\", { userId: user._id, isOnline: true });\r\n      });\r\n\r\n      socket.on(\"user status back\", (userData) => {\r\n        const userIsContact = isContact(userData);\r\n        if (userIsContact) {\r\n          updateOnlineStatus(userData);\r\n        }\r\n      });\r\n\r\n      socket.on(\"user is live\", async (userData) => {\r\n        const userIsContact = await isContact(userData);\r\n        const isLive = clientIsRecipient(userData);\r\n        if (userIsContact) {\r\n          updateLiveStatus(userData, isLive);\r\n        }\r\n        console.log(userData);\r\n      });\r\n\r\n      socket.on(\"user logged out\", (userData) => {\r\n        updateOnlineStatus(userData);\r\n      });\r\n\r\n      socket.on(\"message\", (msg) => {\r\n        if (theirLiveText) {\r\n          setTheirLiveText(\"\");\r\n        }\r\n        setChatLog((prevConversation) => [msg, ...prevConversation]);\r\n      });\r\n      socket.on(\"live text\", async (liveText) => {\r\n        setTheirLiveText(liveText);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const values = {\r\n    socket,\r\n    setSocket,\r\n    startSocketConnection,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={values}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n",["96","97"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js",["98"],"import React, { useContext, useState, useEffect } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = React.createContext();\r\n\r\n// export function useChat() {\r\n//   return useContext(ChatContext);\r\n// }\r\n\r\nfunction ChatProvider({ children }) {\r\n  const [chatLog, setChatLog] = useState(null);\r\n  const [contactsList, setContactsList] = useState(null);\r\n  const [currConversation, setCurrConversation] = useState(\"\");\r\n  const [theirLiveText, setTheirLiveText] = useState(\"\");\r\n  // let history = useHistory();\r\n\r\n  const createContactsList = (contactsArray) => {\r\n    const startingList = contactsArray.map((contact) => {\r\n      const contObj = {\r\n        _id: contact._id,\r\n        username: contact.username,\r\n        isLive: false,\r\n        isOnline: false,\r\n        roomId: \"\",\r\n      };\r\n      return contObj;\r\n    });\r\n    setContactsList(startingList);\r\n  };\r\n\r\n  const updateOnlineStatus = (userData) => {\r\n    console.log(\r\n      `Online status for user ${userData.userId}: ${userData.isOnline}`\r\n    );\r\n    if (contactsList) {\r\n      const updatedList = contactsList.map((contact) => {\r\n        if (contact._id === userData.userId) {\r\n          const isOnline = userData.isOnline;\r\n          const updatedContact = {\r\n            ...contact,\r\n            isOnline,\r\n          };\r\n          return updatedContact;\r\n        }\r\n        return contact;\r\n      });\r\n\r\n      setContactsList(updatedList);\r\n    }\r\n  };\r\n\r\n  const updateLiveStatus = (userData, live) => {\r\n    // console.log(`Live status for user ${userData.id}: ${userData.isLive}`);\r\n    const updatedList = contactsList.map((contact) => {\r\n      if (contact._id === userData.userId) {\r\n        const liveStatus = live ? true : false;\r\n        const updatedContact = {\r\n          ...contact,\r\n          isLive: liveStatus,\r\n          isOnline: true,\r\n          roomId: userData.roomId,\r\n        };\r\n        console.log(`contact live status ${liveStatus}`);\r\n        return updatedContact;\r\n      }\r\n      return contact;\r\n    });\r\n    setContactsList(updatedList);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   fetch(process.env.REACT_APP_PORT_SERVER, {\r\n  //     headers: {\r\n  //       Authorization: \"Bearer \" + this.props.token,\r\n  //     },\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => {\r\n  //       if (res.authenticated === false) {\r\n  //         console.log(\"Start session to enter chat.\");\r\n  //         history.push(\"/\");\r\n  //       } else {\r\n  //         setUser(res.user);\r\n  //         createContactsList(res.user.connections);\r\n  //         console.log(\r\n  //           `User ${res.user.username} has been correctly authenticated.`\r\n  //         );\r\n  //         history.push(\"/chat\");\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (!user) {\r\n  //     fetch(process.env.REACT_APP_PORT_SERVER, {\r\n  //       credentials: \"include\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       \"Access-Control-Allow-Origin\": process.env.REACT_APP_PORT_SERVER,\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((res) => {\r\n  //         if (res.authenticated === false) {\r\n  //           console.log(\"Start session to enter chat.\");\r\n  //           history.push(\"/\");\r\n  //         } else {\r\n  //           setUser(res.user);\r\n  //           createContactsList(res.user.connections);\r\n  //           console.log(\r\n  //             `User ${res.user.username} has been correctly authenticated.`\r\n  //           );\r\n  //           history.push(\"/chat\");\r\n  //         }\r\n  //       })\r\n  //       .catch((err) => console.log(err));\r\n  //   }\r\n  // }, []);\r\n\r\n  const values = {\r\n    chatLog,\r\n    setChatLog,\r\n    contactsList,\r\n    createContactsList,\r\n    updateOnlineStatus,\r\n    updateLiveStatus,\r\n    currConversation,\r\n    setCurrConversation,\r\n    theirLiveText,\r\n    setTheirLiveText,\r\n  };\r\n\r\n  return <ChatContext.Provider value={values}>{children}</ChatContext.Provider>;\r\n}\r\n\r\nconst useChat = () => React.useContext(ChatContext);\r\nexport { ChatProvider, useChat };\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js",["99"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js",["100"],"import React, { useRef, useState } from \"react\";\r\n\r\nexport default function ChangeUsername({ values }) {\r\n  const { show, setShow, handleOpenClose, user, setUser } = values;\r\n  const usernameRef = useRef();\r\n  const [usernameSuccess, setUsernameSuccess] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const newUsername = usernameRef.current[\"username\"].value;\r\n\r\n    fetch(`${process.env.REACT_APP_PORT_SERVER}/user`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ newUsername: newUsername }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setUser((prev) => {\r\n            return { ...prev, username: newUsername };\r\n          });\r\n          setShow((prev) => {\r\n            return { ...prev, usernameSuccess: true };\r\n          });\r\n          setTimeout(() => {\r\n            setShow((prev) => {\r\n              return { ...prev, usernameSuccess: false };\r\n            });\r\n          }, 5000);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"username\")}>\r\n        Change username\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div\r\n        className={show === \"username\" ? \"option-content\" : \"hidden-content\"}\r\n      >\r\n        <form ref={usernameRef} className=\"option-form\" onSubmit={handleChange}>\r\n          <input\r\n            className=\"option-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            defaultValue={user.username}\r\n            required\r\n          ></input>\r\n          <button className=\"option-input\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n          <span\r\n            style={\r\n              usernameSuccess\r\n                ? { display: \"inline-block\" }\r\n                : { display: \"none\" }\r\n            }\r\n            className=\"material-icons success-check\"\r\n          >\r\n            done\r\n          </span>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js",["101","102","103"],"import React from \"react\";\r\nimport { useSocket } from \"../../Context/SocketContext\";\r\n\r\nexport default function DeleteUser({ values }) {\r\n  const {\r\n    show,\r\n    handleOpenClose,\r\n    user,\r\n    setUser,\r\n    userIsTemp,\r\n    setUserIsTemp,\r\n  } = values;\r\n  const { socket } = useSocket();\r\n\r\n  const handleDelete = async () => {\r\n    fetch(process.env.REACT_APP_PORT_SERVER + \"/logout\", {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"deleted\");\r\n          socket.emit(\"user deleted\");\r\n          setUser(null);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"delete\")}>\r\n        Delete user{\" \"}\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div className={show === \"delete\" ? \"option-content\" : \"hidden-content\"}>\r\n        <div className=\"option-info\">\r\n          This will delete your user data from our database. Messages you sent\r\n          to other users will still be visible to them. They'll see your account\r\n          as \"deleted\" and without a username.\r\n        </div>\r\n        <div onClick={() => handleDelete()} className=\"option-form\">\r\n          <button type=\"submit\" className=\"delete-user\">\r\n            Delete login credentials and user data\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\AddConnection.js",["104","105","106"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\Contacts.js",["107"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatWindow.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\InputArea.js",["108"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatLog.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\WelcomeScreen\\LogIn.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\Header.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\ConnsMenu.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\UIContext.js",["109"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\AnimatedNav.js",["110","111","112","113","114","115","116","117"],"import React from \"react\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { useChat } from \"../../Context/ChatContext\";\r\nimport { useSocket } from \"../../Context/SocketContext\";\r\nimport { useUI } from \"../../Context/UIContext\";\r\nimport \"../../App.css\";\r\n\r\nexport default function AnimatedNav() {\r\n  const {\r\n    recipient,\r\n    setContactsList,\r\n    setChatLog,\r\n    liveText,\r\n    setLiveText,\r\n  } = useChat();\r\n  const { socket, online } = useSocket();\r\n  const { user } = useAuth();\r\n  const { toggleConns, toggleOpts, chatOpen } = useUI();\r\n\r\n  return (\r\n    <div\r\n      className={`animated-nav ${!recipient && \"hidden-nav\"} ${\r\n        !chatOpen && \"hidden-nav\"\r\n      }`}\r\n    >\r\n      <span\r\n        className={`circle material-icons ${\r\n          recipient\r\n            ? !recipient.status\r\n              ? \"offline-button\"\r\n              : recipient.status + \"-button\"\r\n            : \"offline-button\"\r\n        } `}\r\n      >\r\n        alternate_email\r\n      </span>\r\n      <span class=\"material-icons\">clear</span>\r\n      <span\r\n        className={`circle material-icons ${\r\n          online ? \"live-button\" : \"offline-button\"\r\n        }`}\r\n      >\r\n        settings\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"118","severity":1,"message":"119","line":14,"column":17,"nodeType":"120","messageId":"121","endLine":14,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":20,"column":5,"nodeType":"120","messageId":"121","endLine":20,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":43,"column":6,"nodeType":"125","endLine":43,"endColumn":12,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":94,"column":6,"nodeType":"125","endLine":94,"endColumn":14,"suggestions":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"123","severity":1,"message":"133","line":25,"column":6,"nodeType":"125","endLine":25,"endColumn":16,"suggestions":"134"},{"ruleId":"118","severity":1,"message":"135","line":12,"column":11,"nodeType":"120","messageId":"121","endLine":12,"endColumn":17},{"ruleId":"118","severity":1,"message":"136","line":6,"column":27,"nodeType":"120","messageId":"121","endLine":6,"endColumn":45},{"ruleId":"118","severity":1,"message":"137","line":8,"column":5,"nodeType":"120","messageId":"121","endLine":8,"endColumn":9},{"ruleId":"118","severity":1,"message":"138","line":10,"column":5,"nodeType":"120","messageId":"121","endLine":10,"endColumn":15},{"ruleId":"118","severity":1,"message":"139","line":11,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":18},{"ruleId":"118","severity":1,"message":"140","line":1,"column":25,"nodeType":"120","messageId":"121","endLine":1,"endColumn":33},{"ruleId":"118","severity":1,"message":"141","line":1,"column":35,"nodeType":"120","messageId":"121","endLine":1,"endColumn":44},{"ruleId":"118","severity":1,"message":"137","line":8,"column":11,"nodeType":"120","messageId":"121","endLine":8,"endColumn":15},{"ruleId":"123","severity":1,"message":"142","line":22,"column":6,"nodeType":"125","endLine":22,"endColumn":20,"suggestions":"143"},{"ruleId":"118","severity":1,"message":"141","line":1,"column":25,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"141","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"144","line":11,"column":5,"nodeType":"120","messageId":"121","endLine":11,"endColumn":20},{"ruleId":"118","severity":1,"message":"145","line":12,"column":5,"nodeType":"120","messageId":"121","endLine":12,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":13,"column":5,"nodeType":"120","messageId":"121","endLine":13,"endColumn":13},{"ruleId":"118","severity":1,"message":"146","line":14,"column":5,"nodeType":"120","messageId":"121","endLine":14,"endColumn":16},{"ruleId":"118","severity":1,"message":"147","line":16,"column":11,"nodeType":"120","messageId":"121","endLine":16,"endColumn":17},{"ruleId":"118","severity":1,"message":"137","line":17,"column":11,"nodeType":"120","messageId":"121","endLine":17,"endColumn":15},{"ruleId":"118","severity":1,"message":"148","line":18,"column":11,"nodeType":"120","messageId":"121","endLine":18,"endColumn":22},{"ruleId":"118","severity":1,"message":"149","line":18,"column":24,"nodeType":"120","messageId":"121","endLine":18,"endColumn":34},"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'liveText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has missing dependencies: 'contactsList', 'recipient', 'setChatLog', 'setContactsList', 'setIncoming', and 'setLiveText'. Either include them or remove the dependency array.",["151"],"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"React Hook useEffect has missing dependencies: 'liveText' and 'recipient'. Either include them or remove the dependency array.",["154"],"'online' is assigned a value but never used.","'setUsernameSuccess' is assigned a value but never used.","'user' is assigned a value but never used.","'userIsTemp' is assigned a value but never used.","'setUserIsTemp' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'setRecipient'. Either include it or remove the dependency array.",["155"],"'setContactsList' is assigned a value but never used.","'setChatLog' is assigned a value but never used.","'setLiveText' is assigned a value but never used.","'socket' is assigned a value but never used.","'toggleConns' is assigned a value but never used.","'toggleOpts' is assigned a value but never used.",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [socket, user]",{"range":"164","text":"165"},"Update the dependencies array to be: [contactsList, recipient, setChatLog, setContactsList, setIncoming, setLiveText, socket]",{"range":"166","text":"167"},"Update the dependencies array to be: [incoming, liveText, recipient]",{"range":"168","text":"169"},"Update the dependencies array to be: [contactsList, setRecipient]",{"range":"170","text":"171"},[1154,1160],"[socket, user]",[2667,2675],"[contactsList, recipient, setChatLog, setContactsList, setIncoming, setLiveText, socket]",[831,841],"[incoming, liveText, recipient]",[608,622],"[contactsList, setRecipient]"]