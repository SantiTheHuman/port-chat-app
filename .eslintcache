[{"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\index.js":"1","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\App.js":"3","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Chat.js":"4","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Register.js":"5","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\LogIn.js":"6","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Context\\SessionContext.js":"7","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\NavBar.js":"8","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Connections.js":"9","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\AddConnection.js":"10","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Context\\SocketContext.js":"11"},{"size":308,"mtime":1608628595606,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":832,"mtime":1608836042821,"results":"15","hashOfConfig":"13"},{"size":4212,"mtime":1608882995158,"results":"16","hashOfConfig":"13"},{"size":2056,"mtime":1608834580660,"results":"17","hashOfConfig":"13"},{"size":1673,"mtime":1608834580649,"results":"18","hashOfConfig":"13"},{"size":1203,"mtime":1608835639053,"results":"19","hashOfConfig":"13"},{"size":1280,"mtime":1608836557639,"results":"20","hashOfConfig":"13"},{"size":2349,"mtime":1608878222886,"results":"21","hashOfConfig":"13"},{"size":1588,"mtime":1608834580650,"results":"22","hashOfConfig":"13"},{"size":1222,"mtime":1608882964945,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1z0ticp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\index.js",[],["51","52"],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\reportWebVitals.js",[],["53","54"],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\App.js",[],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Chat.js",["55","56"],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Register.js",["57"],"import React, { useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function Register() {\r\n  let history = useHistory();\r\n  const registerFormRef = useRef();\r\n  const { setUser } = useSession();\r\n  // const { auth, setAuth } = useContext(AuthContext);\r\n\r\n  // HTML FORM SEND\r\n  // <Form action=\"/subdomain\" method=\"post\">\r\n  // <input type=\"text\" name=\"username\"/>\r\n\r\n  const registerNewUser = (e) => {\r\n    e.preventDefault();\r\n    //Check all fields are correctly filled out\r\n\r\n    const userData = {\r\n      username: registerFormRef.current[\"username\"].value,\r\n      email: registerFormRef.current[\"email\"].value,\r\n      password: registerFormRef.current[\"password\"].value,\r\n    };\r\n\r\n    console.log(userData);\r\n\r\n    fetch(\"https://localhost:4000/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // \"Access-Control-Allow-Origin\": \"https://port.contact/\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          setUser(res.user);\r\n          history.push(\"/chat\");\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    registerFormRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"register-form\"\r\n      ref={registerFormRef}\r\n      onSubmit={registerNewUser}\r\n    >\r\n      <h2>New user</h2>\r\n      <div>\r\n        port.contact/\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          required\r\n        ></input>\r\n      </div>\r\n\r\n      <input type=\"email\" name=\"email\" placeholder=\"E-mail\" required></input>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n      ></input>\r\n      <button type=\"submit\">Create</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\LogIn.js",["58"],"import React, { useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function LogIn() {\r\n  const { setUser } = useSession();\r\n  // const { auth, setAuth } = useContext(AuthContext);\r\n  const logInFormRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    //Check all fields are correctly filled out\r\n\r\n    const loginData = {\r\n      username: logInFormRef.current[\"username\"].value,\r\n      password: logInFormRef.current[\"password\"].value,\r\n    };\r\n    console.log(loginData);\r\n\r\n    fetch(\"https://localhost:4000/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(loginData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // \"Access-Control-Allow-Origin\": \"https://port.contact/\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          console.log(res.user);\r\n          // console.log(`Logged in user: ${res.user}`);\r\n          setUser(res.user);\r\n          history.push(\"/chat\");\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    logInFormRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" ref={logInFormRef} onSubmit={handleLogin}>\r\n      <h2>Login</h2>\r\n      <input type=\"text\" name=\"username\" placeholder=\"Username\"></input>\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\"></input>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Context\\SessionContext.js",["59"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SessionContext = React.createContext();\r\n\r\nexport function useSession() {\r\n  return useContext(SessionContext);\r\n}\r\n\r\nexport function SessionProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [conversation, setConversation] = useState({\r\n    connection: {},\r\n    messages: [],\r\n  });\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetch(\"http://localhost:4000/\", {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        \"Access-Control-Allow-Origin\": \"http://localhost:4000/\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            console.log(res.user);\r\n            setUser(res.user);\r\n            history.push(\"/chat\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  const values = { user, setUser, conversation, setConversation };\r\n\r\n  return (\r\n    <SessionContext.Provider value={values}>{children}</SessionContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\NavBar.js",[],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\Connections.js",[],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Components\\AddConnection.js",[],"C:\\Users\\User\\Projects\\Port Connect App\\port-client\\src\\Context\\SocketContext.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":46,"nodeType":"69","messageId":"70","endLine":1,"endColumn":56},{"ruleId":"71","severity":1,"message":"72","line":45,"column":6,"nodeType":"73","endLine":45,"endColumn":8,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":25,"nodeType":"69","messageId":"70","endLine":1,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":1,"column":25,"nodeType":"69","messageId":"70","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"75","line":36,"column":6,"nodeType":"73","endLine":36,"endColumn":8,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"77","line":25,"column":6,"nodeType":"73","endLine":25,"endColumn":14,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setUser', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["82"],"React Hook useEffect has a missing dependency: 'setConversation'. Either include it or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [history, setUser, user]",{"range":"90","text":"91"},"Update the dependencies array to be: [history, user]",{"range":"92","text":"93"},"Update the dependencies array to be: [setConversation, socket]",{"range":"94","text":"95"},[1478,1480],"[history, setUser, user]",[1022,1024],"[history, user]",[730,738],"[setConversation, socket]"]