[{"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js":"1","C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js":"2","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js":"3","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js":"4","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js":"5","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js":"6","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js":"7","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js":"8","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js":"9","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js":"10","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js":"11","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\Contacts.js":"12","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\AddConnection.js":"13","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatWindow.js":"14","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\InputArea.js":"15","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatLog.js":"16","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\WelcomeScreen\\LogIn.js":"17","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\ConnsMenu.js":"18","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\UIContext.js":"19","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\Header.js":"20","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\AnimatedNav.js":"21"},{"size":480,"mtime":1614522448719,"results":"22","hashOfConfig":"23"},{"size":941,"mtime":1614522036515,"results":"24","hashOfConfig":"23"},{"size":3066,"mtime":1614370530656,"results":"25","hashOfConfig":"23"},{"size":1209,"mtime":1614537238624,"results":"26","hashOfConfig":"23"},{"size":2327,"mtime":1614521077473,"results":"27","hashOfConfig":"23"},{"size":323,"mtime":1614522393431,"results":"28","hashOfConfig":"23"},{"size":3449,"mtime":1614603539115,"results":"29","hashOfConfig":"23"},{"size":2260,"mtime":1613573251569,"results":"30","hashOfConfig":"23"},{"size":2112,"mtime":1613661270475,"results":"31","hashOfConfig":"23"},{"size":592,"mtime":1613726205992,"results":"32","hashOfConfig":"23"},{"size":1535,"mtime":1613728610379,"results":"33","hashOfConfig":"23"},{"size":2084,"mtime":1614595691848,"results":"34","hashOfConfig":"23"},{"size":1758,"mtime":1614375787604,"results":"35","hashOfConfig":"23"},{"size":414,"mtime":1614524401684,"results":"36","hashOfConfig":"23"},{"size":1543,"mtime":1614434053522,"results":"37","hashOfConfig":"23"},{"size":1457,"mtime":1614513301658,"results":"38","hashOfConfig":"23"},{"size":2739,"mtime":1614433632072,"results":"39","hashOfConfig":"23"},{"size":689,"mtime":1614603526493,"results":"40","hashOfConfig":"23"},{"size":1932,"mtime":1614598632826,"results":"41","hashOfConfig":"23"},{"size":3397,"mtime":1614602971592,"results":"42","hashOfConfig":"23"},{"size":1228,"mtime":1614601467050,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ej3mat",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js",["91"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js",["92","93","94","95"],"import { io } from \"socket.io-client\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const { user, setUser } = useAuth();\r\n  const [online, setOnline] = useState(false);\r\n  const {\r\n    contactsList,\r\n    recipient,\r\n    setIncoming,\r\n    liveText,\r\n    setLiveText,\r\n    setChatLog,\r\n    setContactsList,\r\n  } = useChat();\r\n\r\n  const startSocketConnection = async (userObj) => {\r\n    const contactIds = await userObj.connections.map((c) => c._id);\r\n    setSocket(\r\n      io(`${process.env.REACT_APP_PORT_SERVER}/chat`, {\r\n        query: {\r\n          _id: userObj._id,\r\n          username: userObj.username,\r\n          connections: JSON.stringify(contactIds),\r\n        },\r\n        withCredentials: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket && socket.close();\r\n    user && startSocketConnection(user);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"connect\", () => {\r\n        console.log(\"socket connected\");\r\n        setOnline(true);\r\n      });\r\n      socket.on(\"ask status\", async ({ userId, socketId, status }) => {\r\n        console.log(\"ask status\", userId, socketId, status);\r\n        const isContact = await contactsList.find((c) => c._id === userId);\r\n        if (isContact) {\r\n          setContactsList((prev) =>\r\n            prev.map((c) =>\r\n              c._id === userId\r\n                ? { ...c, status: \"online\", socketId: socketId }\r\n                : c\r\n            )\r\n          );\r\n          const myStatus =\r\n            recipient && recipient._id === userId ? \"live\" : \"online\";\r\n          socket.emit(\"send status\", {\r\n            userId,\r\n            socketId: socketId,\r\n            status: myStatus,\r\n          });\r\n        }\r\n      });\r\n      socket.on(\"status\", async ({ userId, socketId, status }) => {\r\n        console.log(\"status\", userId, socketId, status);\r\n        setContactsList((prev) =>\r\n          prev.map((c) =>\r\n            c._id === userId ? { ...c, socketId: socketId, status } : c\r\n          )\r\n        );\r\n        socket.emit(\"update contact\", { userId, socketId, status });\r\n      });\r\n      socket.on(\"msg sent\", async (msg) => {\r\n        setChatLog((prev) => {\r\n          return [msg, ...prev];\r\n        });\r\n      });\r\n\r\n      socket.on(\"msg received\", async (msg) => {\r\n        setIncoming(msg);\r\n      });\r\n      socket.on(\"live text\", (input) => {\r\n        setLiveText(input);\r\n      });\r\n      socket.on(\"disconnect\", (reason) => {\r\n        setOnline(false);\r\n        console.log(reason);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const values = {\r\n    socket,\r\n    setSocket,\r\n    online,\r\n    setOnline,\r\n    startSocketConnection,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={values}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n",["96","97"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js",["98"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js",["99","100"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js",["101"],"import React, { useRef, useState } from \"react\";\r\n\r\nexport default function ChangeUsername({ values }) {\r\n  const { show, setShow, handleOpenClose, user, setUser } = values;\r\n  const usernameRef = useRef();\r\n  const [usernameSuccess, setUsernameSuccess] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const newUsername = usernameRef.current[\"username\"].value;\r\n\r\n    fetch(`${process.env.REACT_APP_PORT_SERVER}/user`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ newUsername: newUsername }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setUser((prev) => {\r\n            return { ...prev, username: newUsername };\r\n          });\r\n          setShow((prev) => {\r\n            return { ...prev, usernameSuccess: true };\r\n          });\r\n          setTimeout(() => {\r\n            setShow((prev) => {\r\n              return { ...prev, usernameSuccess: false };\r\n            });\r\n          }, 5000);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"username\")}>\r\n        Change username\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div\r\n        className={show === \"username\" ? \"option-content\" : \"hidden-content\"}\r\n      >\r\n        <form ref={usernameRef} className=\"option-form\" onSubmit={handleChange}>\r\n          <input\r\n            className=\"option-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            defaultValue={user.username}\r\n            required\r\n          ></input>\r\n          <button className=\"option-input\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n          <span\r\n            style={\r\n              usernameSuccess\r\n                ? { display: \"inline-block\" }\r\n                : { display: \"none\" }\r\n            }\r\n            className=\"material-icons success-check\"\r\n          >\r\n            done\r\n          </span>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js",["102","103","104"],"import React from \"react\";\r\nimport { useSocket } from \"../../Context/SocketContext\";\r\n\r\nexport default function DeleteUser({ values }) {\r\n  const {\r\n    show,\r\n    handleOpenClose,\r\n    user,\r\n    setUser,\r\n    userIsTemp,\r\n    setUserIsTemp,\r\n  } = values;\r\n  const { socket } = useSocket();\r\n\r\n  const handleDelete = async () => {\r\n    fetch(process.env.REACT_APP_PORT_SERVER + \"/logout\", {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"deleted\");\r\n          socket.emit(\"user deleted\");\r\n          setUser(null);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"delete\")}>\r\n        Delete user{\" \"}\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div className={show === \"delete\" ? \"option-content\" : \"hidden-content\"}>\r\n        <div className=\"option-info\">\r\n          This will delete your user data from our database. Messages you sent\r\n          to other users will still be visible to them. They'll see your account\r\n          as \"deleted\" and without a username.\r\n        </div>\r\n        <div onClick={() => handleDelete()} className=\"option-form\">\r\n          <button type=\"submit\" className=\"delete-user\">\r\n            Delete login credentials and user data\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\Contacts.js",["105"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\AddConnection.js",["106","107","108","109"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\nimport { useChat } from \"../../Context/ChatContext\";\r\n\r\nexport default function AddConnection(props) {\r\n  const { user } = useAuth();\r\n  const { recipient, createContactsList } = useChat();\r\n  const addContactForm = useRef();\r\n  const [showAddInput, setShowAddInput] = useState(false);\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      username: addContactForm.current[\"username\"].value,\r\n    };\r\n    const contactExists = user.connections\r\n      ? user.connections.find(\r\n          (contact) => contact.username === newContact.username\r\n        )\r\n      : false;\r\n    if (contactExists) {\r\n      console.log(`User ${newContact.username} is already a contact.`);\r\n    } else {\r\n      fetch(`${process.env.REACT_APP_PORT_SERVER}/connections`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(newContact),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            console.log(res.updatedContacts);\r\n            createContactsList(res.updatedContacts);\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    addContactForm.current[\"username\"].value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-contact\" ref={addContactForm} onSubmit={handleAdd}>\r\n      <input\r\n        className=\"add-contact-input\"\r\n        name=\"username\"\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n      ></input>\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatWindow.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\InputArea.js",["110"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\ChatLog.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\WelcomeScreen\\LogIn.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Connections\\ConnsMenu.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\UIContext.js",["111"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\Header.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat\\AnimatedNav.js",["112","113","114","115","116","117","118","119"],{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":14,"column":17,"nodeType":"122","messageId":"123","endLine":14,"endColumn":24},{"ruleId":"120","severity":1,"message":"125","line":20,"column":5,"nodeType":"122","messageId":"123","endLine":20,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":43,"column":6,"nodeType":"128","endLine":43,"endColumn":12,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":97,"column":6,"nodeType":"128","endLine":97,"endColumn":14,"suggestions":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"126","severity":1,"message":"136","line":25,"column":6,"nodeType":"128","endLine":25,"endColumn":16,"suggestions":"137"},{"ruleId":"120","severity":1,"message":"138","line":12,"column":11,"nodeType":"122","messageId":"123","endLine":12,"endColumn":17},{"ruleId":"120","severity":1,"message":"139","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":30},{"ruleId":"120","severity":1,"message":"140","line":6,"column":27,"nodeType":"122","messageId":"123","endLine":6,"endColumn":45},{"ruleId":"120","severity":1,"message":"141","line":8,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":9},{"ruleId":"120","severity":1,"message":"142","line":10,"column":5,"nodeType":"122","messageId":"123","endLine":10,"endColumn":15},{"ruleId":"120","severity":1,"message":"143","line":11,"column":5,"nodeType":"122","messageId":"123","endLine":11,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":21,"column":6,"nodeType":"128","endLine":21,"endColumn":20,"suggestions":"145"},{"ruleId":"120","severity":1,"message":"146","line":1,"column":35,"nodeType":"122","messageId":"123","endLine":1,"endColumn":44},{"ruleId":"120","severity":1,"message":"147","line":7,"column":11,"nodeType":"122","messageId":"123","endLine":7,"endColumn":20},{"ruleId":"120","severity":1,"message":"148","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":22},{"ruleId":"120","severity":1,"message":"149","line":9,"column":24,"nodeType":"122","messageId":"123","endLine":9,"endColumn":39},{"ruleId":"120","severity":1,"message":"146","line":1,"column":25,"nodeType":"122","messageId":"123","endLine":1,"endColumn":34},{"ruleId":"120","severity":1,"message":"146","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"150","line":11,"column":5,"nodeType":"122","messageId":"123","endLine":11,"endColumn":20},{"ruleId":"120","severity":1,"message":"151","line":12,"column":5,"nodeType":"122","messageId":"123","endLine":12,"endColumn":15},{"ruleId":"120","severity":1,"message":"125","line":13,"column":5,"nodeType":"122","messageId":"123","endLine":13,"endColumn":13},{"ruleId":"120","severity":1,"message":"152","line":14,"column":5,"nodeType":"122","messageId":"123","endLine":14,"endColumn":16},{"ruleId":"120","severity":1,"message":"153","line":16,"column":11,"nodeType":"122","messageId":"123","endLine":16,"endColumn":17},{"ruleId":"120","severity":1,"message":"141","line":17,"column":11,"nodeType":"122","messageId":"123","endLine":17,"endColumn":15},{"ruleId":"120","severity":1,"message":"154","line":18,"column":11,"nodeType":"122","messageId":"123","endLine":18,"endColumn":22},{"ruleId":"120","severity":1,"message":"155","line":18,"column":24,"nodeType":"122","messageId":"123","endLine":18,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'liveText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has missing dependencies: 'contactsList', 'recipient', 'setChatLog', 'setContactsList', 'setIncoming', and 'setLiveText'. Either include them or remove the dependency array.",["157"],"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"React Hook useEffect has missing dependencies: 'liveText' and 'recipient'. Either include them or remove the dependency array.",["160"],"'online' is assigned a value but never used.","'showOptionsMenuLabel' is assigned a value but never used.","'setUsernameSuccess' is assigned a value but never used.","'user' is assigned a value but never used.","'userIsTemp' is assigned a value but never used.","'setUserIsTemp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRecipient'. Either include it or remove the dependency array.",["161"],"'useEffect' is defined but never used.","'recipient' is assigned a value but never used.","'showAddInput' is assigned a value but never used.","'setShowAddInput' is assigned a value but never used.","'setContactsList' is assigned a value but never used.","'setChatLog' is assigned a value but never used.","'setLiveText' is assigned a value but never used.","'socket' is assigned a value but never used.","'toggleConns' is assigned a value but never used.","'toggleOpts' is assigned a value but never used.",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [socket, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [contactsList, recipient, setChatLog, setContactsList, setIncoming, setLiveText, socket]",{"range":"172","text":"173"},"Update the dependencies array to be: [incoming, liveText, recipient]",{"range":"174","text":"175"},"Update the dependencies array to be: [contactsList, setRecipient]",{"range":"176","text":"177"},[1154,1160],"[socket, user]",[2837,2845],"[contactsList, recipient, setChatLog, setContactsList, setIncoming, setLiveText, socket]",[831,841],"[incoming, liveText, recipient]",[562,576],"[contactsList, setRecipient]"]