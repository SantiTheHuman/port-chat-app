[{"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js":"1","C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js":"2","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js":"3","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Register.js":"4","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js":"5","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js":"6","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SessionContext.js":"7","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js":"8","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js":"9"},{"size":311,"mtime":1610629242362,"results":"10","hashOfConfig":"11"},{"size":745,"mtime":1610629109422,"results":"12","hashOfConfig":"11"},{"size":1986,"mtime":1610693157518,"results":"13","hashOfConfig":"11"},{"size":6234,"mtime":1610693174550,"results":"14","hashOfConfig":"11"},{"size":4488,"mtime":1610637284099,"results":"15","hashOfConfig":"11"},{"size":2922,"mtime":1610637626495,"results":"16","hashOfConfig":"11"},{"size":4045,"mtime":1610631080263,"results":"17","hashOfConfig":"11"},{"size":3224,"mtime":1610637353194,"results":"18","hashOfConfig":"11"},{"size":2956,"mtime":1610630882515,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ej3mat",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js",[],["41","42"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Register.js",["43","44"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js",["45","46"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js",["47"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SessionContext.js",["48","49"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SessionContext = React.createContext();\r\n\r\nexport function useSession() {\r\n  return useContext(SessionContext);\r\n}\r\n\r\nexport function SessionProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [conversation, setConversation] = useState(null);\r\n  const [contactsList, setContactsList] = useState(null);\r\n  const [currConversation, setCurrConversation] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const createContactsList = (contactsArray) => {\r\n    const startingList = contactsArray.map((contact) => {\r\n      const contObj = {\r\n        _id: contact._id,\r\n        username: contact.username,\r\n        isLive: false,\r\n        isOnline: false,\r\n        roomId: \"\",\r\n      };\r\n      return contObj;\r\n    });\r\n    setContactsList(startingList);\r\n  };\r\n\r\n  const updateOnlineStatus = (userData) => {\r\n    console.log(\r\n      `Online status for user ${userData.userId}: ${userData.isOnline}`\r\n    );\r\n    if (contactsList) {\r\n      const updatedList = contactsList.map((contact) => {\r\n        if (contact._id === userData.userId) {\r\n          const isOnline = userData.isOnline;\r\n          const updatedContact = {\r\n            ...contact,\r\n            isOnline,\r\n          };\r\n          return updatedContact;\r\n        }\r\n        return contact;\r\n      });\r\n\r\n      setContactsList(updatedList);\r\n    }\r\n  };\r\n\r\n  const updateLiveStatus = (userData, live) => {\r\n    // console.log(`Live status for user ${userData.id}: ${userData.isLive}`);\r\n    const updatedList = contactsList.map((contact) => {\r\n      if (contact._id === userData.userId) {\r\n        const liveStatus = live ? true : false;\r\n        const updatedContact = {\r\n          ...contact,\r\n          isLive: liveStatus,\r\n          isOnline: true,\r\n          roomId: userData.roomId,\r\n        };\r\n        console.log(`contact live status ${liveStatus}`);\r\n        return updatedContact;\r\n      }\r\n      return contact;\r\n    });\r\n    setContactsList(updatedList);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (!user) {\r\n  //     fetch(process.env.REACT_APP_PORT_SERVER, {\r\n  //       credentials: \"include\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       \"Access-Control-Allow-Origin\": process.env.REACT_APP_PORT_SERVER,\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((res) => {\r\n  //         if (res.authenticated === false) {\r\n  //           console.log(\"Start session to enter chat.\");\r\n  //           history.push(\"/\");\r\n  //         } else {\r\n  //           setUser(res.user);\r\n  //           createContactsList(res.user.connections);\r\n  //           console.log(\r\n  //             `User ${res.user.username} has been correctly authenticated.`\r\n  //           );\r\n  //           history.push(\"/chat\");\r\n  //         }\r\n  //       })\r\n  //       .catch((err) => console.log(err));\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (!user) {\r\n  //     fetch(\"process.env.REACT_APP_PORT_SERVER/\", {\r\n  //       method: \"GET\",\r\n  //       credentials: \"include\",\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //       \"Access-Control-Allow-Origin\": \"process.env.REACT_APP_PORT_SERVER/\",\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((res) => {\r\n  //         if (res.success === true) {\r\n  //           // console.log(res.user);\r\n  //           setUser(res.user);\r\n  //           createContactsList(res.user.connections);\r\n  //           return history.push(\"/chat\");\r\n  //         }\r\n  //       })\r\n  //       .catch((err) => console.log(err));\r\n  //   }\r\n  // }, []);\r\n\r\n  const values = {\r\n    user,\r\n    setUser,\r\n    conversation,\r\n    setConversation,\r\n    contactsList,\r\n    createContactsList,\r\n    updateOnlineStatus,\r\n    updateLiveStatus,\r\n    currConversation,\r\n    setCurrConversation,\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Provider value={values}>{children}</SessionContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js",["50"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function AddConnection(props) {\r\n  const { user, setUser, currConversation, createContactsList } = useSession();\r\n  const addContactForm = useRef();\r\n  const [showAddInput, setShowAddInput] = useState(false);\r\n  const [showAddTitle, setShowAddTitle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShowAddInput(false);\r\n  }, [currConversation]);\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    if (!showAddInput) {\r\n      toggleAdd();\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      username: addContactForm.current[\"username\"].value,\r\n    };\r\n    const contactExists = user.connections\r\n      ? user.connections.find(\r\n          (contact) => contact.username === newContact.username\r\n        )\r\n      : false;\r\n    if (contactExists) {\r\n      console.log(`User ${newContact.username} is already a contact.`);\r\n    } else {\r\n      // console.log(`Request to add this contact: ${JSON.stringify(newContact)}`);\r\n      fetch(`${process.env.REACT_APP_PORT_SERVER}/connections`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(newContact),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            console.log(res.updatedContacts);\r\n            createContactsList(res.updatedContacts);\r\n            // setUser((prevUser) => {\r\n            //   return { ...prevUser, connections: res.updatedContacts };\r\n            // });\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    addContactForm.current[\"username\"].value = \"\";\r\n    toggleAdd();\r\n  };\r\n\r\n  const toggleAdd = () => {\r\n    setShowAddInput((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-contact\" ref={addContactForm} onSubmit={handleAdd}>\r\n      {/* <button type=\"submit\">\r\n          <span className=\"material-icons\">add_circle</span>\r\n        </button> */}\r\n      <div\r\n        onMouseEnter={() => setShowAddTitle(true)}\r\n        onMouseLeave={() => setShowAddTitle(false)}\r\n\r\n        // className=\"logout-button\"\r\n      >\r\n        <button onClick={handleAdd} type=\"submit\">\r\n          <span className=\" material-icons\">add_circle</span>\r\n        </button>\r\n        <input\r\n          id=\"add-contact-field\"\r\n          className={showAddInput ? \"show-add\" : \"hide-add\"}\r\n          name=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n        ></input>\r\n        <span\r\n          onClick={handleAdd}\r\n          className={`add-title ${\r\n            showAddTitle ? \"show-logout\" : \"hide-logout\"\r\n          } ${showAddInput ? \"add-title-off\" : \"add-title-on\"}`}\r\n        >\r\n          Add contact\r\n        </span>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":35,"nodeType":"57","messageId":"58","endLine":1,"endColumn":44},{"ruleId":"55","severity":1,"message":"59","line":8,"column":11,"nodeType":"57","messageId":"58","endLine":8,"endColumn":15},{"ruleId":"55","severity":1,"message":"60","line":1,"column":46,"nodeType":"57","messageId":"58","endLine":1,"endColumn":56},{"ruleId":"61","severity":1,"message":"62","line":70,"column":6,"nodeType":"63","endLine":70,"endColumn":8,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":97,"column":6,"nodeType":"63","endLine":97,"endColumn":14,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":39,"nodeType":"57","messageId":"58","endLine":1,"endColumn":48},{"ruleId":"55","severity":1,"message":"67","line":15,"column":7,"nodeType":"57","messageId":"58","endLine":15,"endColumn":14},{"ruleId":"55","severity":1,"message":"68","line":5,"column":17,"nodeType":"57","messageId":"58","endLine":5,"endColumn":24},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'asyncStart', 'history', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has missing dependencies: 'clientIsRecipient', 'isContact', 'setConversation', 'updateLiveStatus', 'updateOnlineStatus', and 'user'. Either include them or remove the dependency array.",["72"],"'history' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [asyncStart, history, user]",{"range":"77","text":"78"},"Update the dependencies array to be: [clientIsRecipient, isContact, setConversation, socket, updateLiveStatus, updateOnlineStatus, user]",{"range":"79","text":"80"},[2076,2078],"[asyncStart, history, user]",[2722,2730],"[clientIsRecipient, isContact, setConversation, socket, updateLiveStatus, updateOnlineStatus, user]"]