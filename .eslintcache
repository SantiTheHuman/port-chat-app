[{"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js":"1","C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js":"2","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js":"3","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js":"4","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js":"5","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js":"6","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js":"7","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js":"8","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js":"9","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js":"10","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\LogInScreen.js":"11","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js":"12","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js":"13","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js":"14","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js":"15","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js":"16"},{"size":385,"mtime":1611489944502,"results":"17","hashOfConfig":"18"},{"size":613,"mtime":1611489998274,"results":"19","hashOfConfig":"18"},{"size":334,"mtime":1612024768550,"results":"20","hashOfConfig":"18"},{"size":2487,"mtime":1613926943178,"results":"21","hashOfConfig":"18"},{"size":2151,"mtime":1613922889919,"results":"22","hashOfConfig":"18"},{"size":2194,"mtime":1613927503745,"results":"23","hashOfConfig":"18"},{"size":3205,"mtime":1613743316832,"results":"24","hashOfConfig":"18"},{"size":1134,"mtime":1613926834889,"results":"25","hashOfConfig":"18"},{"size":2265,"mtime":1613738961181,"results":"26","hashOfConfig":"18"},{"size":323,"mtime":1611394547676,"results":"27","hashOfConfig":"18"},{"size":2742,"mtime":1613724658138,"results":"28","hashOfConfig":"18"},{"size":3722,"mtime":1613728932437,"results":"29","hashOfConfig":"18"},{"size":2260,"mtime":1613573251569,"results":"30","hashOfConfig":"18"},{"size":2112,"mtime":1613661270475,"results":"31","hashOfConfig":"18"},{"size":592,"mtime":1613726205992,"results":"32","hashOfConfig":"18"},{"size":1535,"mtime":1613728610379,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ej3mat",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js",[],["70","71"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js",["72"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js",["73","74","75","76"],"import { io } from \"socket.io-client\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useChat } from \"./ChatContext\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  const [socket, setSocket] = useState(null);\r\n  const { user } = useAuth();\r\n  const {\r\n    contactsList,\r\n    recipient,\r\n    setChatLog,\r\n    updateContactStatus,\r\n    theirLiveText,\r\n    setTheirLiveText,\r\n  } = useChat();\r\n\r\n  const startSocketConnection = async (userObj) => {\r\n    setSocket(\r\n      io(`${process.env.REACT_APP_PORT_SERVER}/chat`, {\r\n        query: {\r\n          _id: userObj._id,\r\n          username: userObj.username,\r\n          connections: JSON.stringify(userObj.connections),\r\n        },\r\n        withCredentials: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket && socket.close();\r\n    user && startSocketConnection(user);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"get status\", async (userId) => {\r\n        const isContact = await contactsList.find((c) => userId === c._id);\r\n        if (isContact) {\r\n          updateContactStatus({ userId, status: \"online\" });\r\n          const myStatus = (await recipient._id) === userId ? \"live\" : \"online\";\r\n          socket.emit(\"status\", {\r\n            contact: JSON.stringify(isContact),\r\n            status: myStatus,\r\n          });\r\n        }\r\n      });\r\n      socket.on(\"status\", async (userData) => {\r\n        updateContactStatus(userData);\r\n      });\r\n      socket.on(\"message\", async (msg) => {\r\n        if (msg.senderId === recipient._id || msg.senderId === user._id) {\r\n          setChatLog((prev) => {\r\n            return [msg, ...prev];\r\n          });\r\n        } else {\r\n          console.log(`Notification: '${msg.content}'`);\r\n        }\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const values = {\r\n    socket,\r\n    setSocket,\r\n    startSocketConnection,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={values}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ChatContext.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\AuthContext.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\ContextProviders.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\LogInScreen.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\OptionsMenu.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\ChangeUsername.js",["77"],"import React, { useRef, useState } from \"react\";\r\n\r\nexport default function ChangeUsername({ values }) {\r\n  const { show, setShow, handleOpenClose, user, setUser } = values;\r\n  const usernameRef = useRef();\r\n  const [usernameSuccess, setUsernameSuccess] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const newUsername = usernameRef.current[\"username\"].value;\r\n\r\n    fetch(`${process.env.REACT_APP_PORT_SERVER}/user`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ newUsername: newUsername }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setUser((prev) => {\r\n            return { ...prev, username: newUsername };\r\n          });\r\n          setShow((prev) => {\r\n            return { ...prev, usernameSuccess: true };\r\n          });\r\n          setTimeout(() => {\r\n            setShow((prev) => {\r\n              return { ...prev, usernameSuccess: false };\r\n            });\r\n          }, 5000);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"username\")}>\r\n        Change username\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div\r\n        className={show === \"username\" ? \"option-content\" : \"hidden-content\"}\r\n      >\r\n        <form ref={usernameRef} className=\"option-form\" onSubmit={handleChange}>\r\n          <input\r\n            className=\"option-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            defaultValue={user.username}\r\n            required\r\n          ></input>\r\n          <button className=\"option-input\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n          <span\r\n            style={\r\n              usernameSuccess\r\n                ? { display: \"inline-block\" }\r\n                : { display: \"none\" }\r\n            }\r\n            className=\"material-icons success-check\"\r\n          >\r\n            done\r\n          </span>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\SaveAccount.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\LogOut.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\OptionsMenu\\DeleteUser.js",["78","79","80"],"import React from \"react\";\r\nimport { useSocket } from \"../../Context/SocketContext\";\r\n\r\nexport default function DeleteUser({ values }) {\r\n  const {\r\n    show,\r\n    handleOpenClose,\r\n    user,\r\n    setUser,\r\n    userIsTemp,\r\n    setUserIsTemp,\r\n  } = values;\r\n  const { socket } = useSocket();\r\n\r\n  const handleDelete = async () => {\r\n    fetch(process.env.REACT_APP_PORT_SERVER + \"/logout\", {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"deleted\");\r\n          socket.emit(\"user deleted\");\r\n          setUser(null);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-div\">\r\n      <div className=\"option-label\" onClick={() => handleOpenClose(\"delete\")}>\r\n        Delete user{\" \"}\r\n        <span className=\"material-icons option-arrow\">keyboard_arrow_down</span>\r\n      </div>\r\n      <div className={show === \"delete\" ? \"option-content\" : \"hidden-content\"}>\r\n        <div className=\"option-info\">\r\n          This will delete your user data from our database. Messages you sent\r\n          to other users will still be visible to them. They'll see your account\r\n          as \"deleted\" and without a username.\r\n        </div>\r\n        <div onClick={() => handleDelete()} className=\"option-form\">\r\n          <button type=\"submit\" className=\"delete-user\">\r\n            Delete login credentials and user data\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":8,"column":43,"nodeType":"87","messageId":"88","endLine":8,"endColumn":56},{"ruleId":"85","severity":1,"message":"86","line":20,"column":5,"nodeType":"87","messageId":"88","endLine":20,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":21,"column":5,"nodeType":"87","messageId":"88","endLine":21,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":40,"column":6,"nodeType":"92","endLine":40,"endColumn":12,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":72,"column":6,"nodeType":"92","endLine":72,"endColumn":14,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"96","line":6,"column":27,"nodeType":"87","messageId":"88","endLine":6,"endColumn":45},{"ruleId":"85","severity":1,"message":"97","line":8,"column":5,"nodeType":"87","messageId":"88","endLine":8,"endColumn":9},{"ruleId":"85","severity":1,"message":"98","line":10,"column":5,"nodeType":"87","messageId":"88","endLine":10,"endColumn":15},{"ruleId":"85","severity":1,"message":"99","line":11,"column":5,"nodeType":"87","messageId":"88","endLine":11,"endColumn":18},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'theirLiveText' is assigned a value but never used.","Identifier","unusedVar","'setTheirLiveText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'contactsList', 'recipient._id', 'setChatLog', 'updateContactStatus', and 'user._id'. Either include them or remove the dependency array.",["103"],"'setUsernameSuccess' is assigned a value but never used.","'user' is assigned a value but never used.","'userIsTemp' is assigned a value but never used.","'setUserIsTemp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [socket, user]",{"range":"108","text":"109"},"Update the dependencies array to be: [contactsList, recipient._id, setChatLog, socket, updateContactStatus, user._id]",{"range":"110","text":"111"},[1033,1039],"[socket, user]",[2212,2220],"[contactsList, recipient._id, setChatLog, socket, updateContactStatus, user._id]"]