[{"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js":"1","C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js":"2","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js":"3","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Register.js":"4","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js":"5","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js":"6","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SessionContext.js":"7","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js":"8","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js":"9","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Menu.js":"10"},{"size":311,"mtime":1610629242362,"results":"11","hashOfConfig":"12"},{"size":745,"mtime":1610629109422,"results":"13","hashOfConfig":"12"},{"size":492,"mtime":1610800393780,"results":"14","hashOfConfig":"12"},{"size":6234,"mtime":1610693174550,"results":"15","hashOfConfig":"12"},{"size":3698,"mtime":1610879983292,"results":"16","hashOfConfig":"12"},{"size":2769,"mtime":1610876600345,"results":"17","hashOfConfig":"12"},{"size":4243,"mtime":1610876347857,"results":"18","hashOfConfig":"12"},{"size":3188,"mtime":1610724852862,"results":"19","hashOfConfig":"12"},{"size":3161,"mtime":1610807950151,"results":"20","hashOfConfig":"12"},{"size":2357,"mtime":1610808185090,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ej3mat",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Projects\\chat-app\\client\\src\\index.js",[],["44","45"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\App.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\NavBar.js",["46"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Register.js",["47","48"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\nimport { useSocket } from \"../Context/SocketContext\";\r\n\r\nexport default function Register() {\r\n  let history = useHistory();\r\n  const { user, setUser, createContactsList } = useSession();\r\n  const { startSocketConnection } = useSocket();\r\n  const usernameRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [showUsernameInput, setShowUsernameInput] = useState(true);\r\n  const [showEmailInput, setShowEmailInput] = useState(false);\r\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\r\n  const [userExists, setUserExists] = useState(false);\r\n  const [usernameInput, setUsernameInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  // const [emailInput, setEmailInput] = useState(\"\");\r\n\r\n  // HTML FORM SEND\r\n  // <Form action=\"/subdomain\" method=\"post\">\r\n  // <input type=\"text\" name=\"username\"/>\r\n\r\n  const asyncStart = async (userObj) => {\r\n    await setUser(userObj);\r\n    await createContactsList(userObj.connections);\r\n    await startSocketConnection(userObj);\r\n    history.push(\"/chat\");\r\n  };\r\n\r\n  const storeUsername = (e) => {\r\n    e.preventDefault();\r\n    //Check all fields are correctly filled out\r\n    const username = usernameRef.current[\"username\"].value;\r\n\r\n    setUsernameInput(username);\r\n\r\n    // console.log(usernameInput);\r\n\r\n    fetch(`${process.env.REACT_APP_PORT_SERVER}/login/username`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // \"Access-Control-Allow-Origin\": \"http://port.contact/\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ username: username }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(username, res.success);\r\n        if (res.success === true) {\r\n          setUserExists(true);\r\n          setShowUsernameInput(false);\r\n          setShowPasswordInput(true);\r\n        } else {\r\n          setUserExists(false);\r\n          setShowUsernameInput(false);\r\n          setShowPasswordInput(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const storePassword = () => {\r\n    setPasswordInput(passwordRef.current[\"password\"].value);\r\n    setShowPasswordInput(false);\r\n    setShowEmailInput(true);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    // console.log(userExists);\r\n    if (userExists) {\r\n      const loginData = {\r\n        username: usernameInput,\r\n        password: passwordRef.current[\"password\"].value,\r\n      };\r\n      // console.log(loginData);\r\n\r\n      fetch(`${process.env.REACT_APP_PORT_SERVER}/login`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(loginData),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        // \"Access-Control-Allow-Origin\": \"http://port.contact/\",\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            asyncStart(res.user);\r\n            // console.log(res.user);\r\n            // console.log(`Logged in user: ${res.user.username}`);\r\n            // startSocketConnection(res.user);\r\n            // history.push(\"/chat\");\r\n          } else {\r\n            console.log(res.message);\r\n            // history.push(\"/chat\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      storePassword();\r\n    }\r\n  };\r\n\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n    const registerData = {\r\n      username: usernameInput,\r\n      password: passwordInput,\r\n      email: emailRef.current[\"email\"].value,\r\n    };\r\n    fetch(`${process.env.REACT_APP_PORT_SERVER}/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      // \"Access-Control-Allow-Origin\": \"http://port.contact/\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify(registerData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          asyncStart(res.user);\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        debugger;\r\n      });\r\n  };\r\n\r\n  const goBack = () => {\r\n    if (showPasswordInput) {\r\n      setShowPasswordInput(false);\r\n      setShowUsernameInput(true);\r\n    } else {\r\n      setShowEmailInput(false);\r\n      setShowPasswordInput(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-area\">\r\n      <form\r\n        ref={usernameRef}\r\n        className={`login-input ${\r\n          showUsernameInput ? \"show-login-input\" : \"hide-login-input\"\r\n        }`}\r\n        onSubmit={storeUsername}\r\n      >\r\n        <input name=\"username\" required></input>\r\n        <p>username</p>\r\n      </form>\r\n\r\n      <form\r\n        ref={passwordRef}\r\n        className={`login-input later-input ${\r\n          showPasswordInput ? \"show-login-input\" : \"hide-login-input\"\r\n        }`}\r\n        onSubmit={handleLogin}\r\n      >\r\n        <p className=\"go-back\" onClick={goBack}>\r\n          {\"<\"}\r\n        </p>\r\n        <input type=\"password\" name=\"password\" required></input>\r\n        <p>password</p>\r\n      </form>\r\n\r\n      <form\r\n        ref={emailRef}\r\n        className={`login-input later-input ${\r\n          showEmailInput ? \"show-login-input\" : \"hide-login-input\"\r\n        }`}\r\n        onSubmit={registerUser}\r\n      >\r\n        <p className=\"go-back\" onClick={goBack}>\r\n          {\"<\"}\r\n        </p>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          // required\r\n        ></input>\r\n        <p>email</p>\r\n      </form>\r\n    </div>\r\n    /* <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          required\r\n        ></input>\r\n      </div>\r\n\r\n      <input type=\"email\" name=\"email\" placeholder=\"E-mail\" required></input>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n      ></input>\r\n      <button type=\"submit\">Create</button> */\r\n  );\r\n}\r\n","C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Chat.js",["49"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SocketContext.js",["50","51","52","53"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Context\\SessionContext.js",["54"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Contacts.js",[],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\AddConnection.js",["55"],"C:\\Users\\User\\Projects\\chat-app\\client\\src\\Components\\Menu.js",["56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":1,"column":35,"nodeType":"63","messageId":"64","endLine":1,"endColumn":44},{"ruleId":"61","severity":1,"message":"66","line":8,"column":11,"nodeType":"63","messageId":"64","endLine":8,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":64,"column":6,"nodeType":"69","endLine":64,"endColumn":8,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":19,"column":5,"nodeType":"63","messageId":"64","endLine":19,"endColumn":18},{"ruleId":"61","severity":1,"message":"72","line":22,"column":10,"nodeType":"63","messageId":"64","endLine":22,"endColumn":25},{"ruleId":"61","severity":1,"message":"73","line":22,"column":27,"nodeType":"63","messageId":"64","endLine":22,"endColumn":45},{"ruleId":"67","severity":1,"message":"74","line":91,"column":6,"nodeType":"69","endLine":91,"endColumn":14,"suggestions":"75"},{"ruleId":"61","severity":1,"message":"65","line":1,"column":39,"nodeType":"63","messageId":"64","endLine":1,"endColumn":48},{"ruleId":"61","severity":1,"message":"76","line":5,"column":17,"nodeType":"63","messageId":"64","endLine":5,"endColumn":24},{"ruleId":"61","severity":1,"message":"66","line":8,"column":11,"nodeType":"63","messageId":"64","endLine":8,"endColumn":15},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'asyncStart', 'history', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["79"],"'theirLiveText' is assigned a value but never used.","'theirLiveCursor' is assigned a value but never used.","'setTheirLiveCursor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientIsRecipient', 'isContact', 'setConversation', 'setTheirLiveText', 'updateLiveStatus', 'updateOnlineStatus', and 'user'. Either include them or remove the dependency array.",["80"],"'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [asyncStart, history, user]",{"range":"85","text":"86"},"Update the dependencies array to be: [clientIsRecipient, isContact, setConversation, setTheirLiveText, socket, updateLiveStatus, updateOnlineStatus, user]",{"range":"87","text":"88"},[1838,1840],"[asyncStart, history, user]",[2569,2577],"[clientIsRecipient, isContact, setConversation, setTheirLiveText, socket, updateLiveStatus, updateOnlineStatus, user]"]