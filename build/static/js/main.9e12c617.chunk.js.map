{"version":3,"sources":["Context/SessionContext.js","Components/AddConnection.js","Components/Connections.js","Components/NavBar.js","Context/SocketProvider.js","Components/Chat.js","Components/Register.js","Components/LogIn.js","App.js","index.js"],"names":["SessionContext","React","createContext","useSession","useContext","SessionProvider","children","useState","user","setUser","connection","messages","conversation","setConversation","history","useHistory","useEffect","fetch","method","credentials","headers","then","res","json","success","console","log","push","catch","err","values","Provider","value","AddConnection","props","addContactForm","useRef","handleAdd","e","a","preventDefault","newContact","username","current","connections","find","contact","JSON","stringify","body","prev","updatedContacts","message","className","ref","onSubmit","name","type","placeholder","process","REACT_APP_API_URL","Connections","map","index","onClick","connectionId","_id","openConnection","contacts","error","NavBar","to","SocketContext","SocketProvider","socket","io","Chat","chatLog","chatBottom","messageRef","chatHeight","setChatHeight","on","newMessage","authenticated","windowHeight","window","innerHeight","scrollIntoView","block","behavior","style","height","m","id","senderId","classList","add","deleteMessage","content","messageData","recipientId","emit","autoComplete","Register","registerFormRef","userData","email","password","reset","required","LogIn","logInFormRef","loginData","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e12c617.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SessionContext = React.createContext();\r\n\r\nexport function useSession() {\r\n  return useContext(SessionContext);\r\n}\r\n\r\nexport function SessionProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [conversation, setConversation] = useState({\r\n    connection: {},\r\n    messages: [],\r\n  });\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetch(\"https://port-contact-server.herokuapp.com\", {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        \"Access-Control-Allow-Origin\":\r\n          \"https://port-contact-server.herokuapp.com\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            console.log(res.user);\r\n            setUser(res.user);\r\n            history.push(\"/chat\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  const values = { user, setUser, conversation, setConversation };\r\n\r\n  return (\r\n    <SessionContext.Provider value={values}>{children}</SessionContext.Provider>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function AddConnection(props) {\r\n  const { user, setUser } = useSession();\r\n  const addContactForm = useRef();\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newContact = {\r\n      username: addContactForm.current[\"username\"].value,\r\n    };\r\n    const contactExists = (await user.connections)\r\n      ? await user.connections.find(\r\n          (contact) => contact.username === newContact.username\r\n        )\r\n      : false;\r\n    if (contactExists) {\r\n      console.log(`User ${newContact.username} is already a contact.`);\r\n    } else {\r\n      console.log(`Request to add this contact: ${JSON.stringify(newContact)}`);\r\n      fetch(\"https://port-contact-server.herokuapp.com/connections\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(newContact),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success === true) {\r\n            setUser((prev) => {\r\n              prev.connections = res.updatedContacts;\r\n            });\r\n          } else {\r\n            console.log(res.message);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"add-contact\" ref={addContactForm} onSubmit={handleAdd}>\r\n        <input name=\"username\" type=\"text\" placeholder=\"Username\"></input>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\nimport AddConnection from \"./AddConnection\";\r\nconst {\r\n  REACT_APP_API_URL = \"https://port-contact-server.herokuapp.com\",\r\n} = process.env;\r\n\r\nexport default function Connections(props) {\r\n  const { user, setUser, setConversation } = useSession();\r\n\r\n  // const { messages, setMessages } = useContext(ChatContext.messages);\r\n  // const { recipientId, setPartnerId } = useContext(ChatContext.recipientId);\r\n  // const [contacts, setContacts] = useState([]);\r\n\r\n  const openConnection = (connection) => {\r\n    console.log(connection);\r\n\r\n    const connectionId = connection._id;\r\n\r\n    fetch(REACT_APP_API_URL + \"/messages/\" + connectionId, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      \"Access-Control-Allow-Origin\":\r\n        \"https://port-contact-server.herokuapp.com\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === false) {\r\n          console.log(\"Error fetching messages.\");\r\n        } else {\r\n          setConversation({ connection: connection, messages: res.messages });\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteConnection = (c) => {\r\n    fetch(\"https://port-contact-server.herokuapp.com/connections/\" + c._id, {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          setUser((prev) => (prev.connections.contacts = res.updatedContacts));\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n      });\r\n    // console.log(c);\r\n    // const index = usersList.indexOf(user);\r\n    // setUsersList((prev) => prev.slice(index, 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"connections\">\r\n      {user.connections &&\r\n        user.connections.map((contact, index) => (\r\n          <div key={index} className=\"contact\">\r\n            <button onClick={() => openConnection(contact)}>\r\n              {contact.username}\r\n            </button>\r\n            <button\r\n              className=\"delete-user-button\"\r\n              onClick={() => deleteConnection(contact)}\r\n            >\r\n              x\r\n            </button>\r\n          </div>\r\n        ))}\r\n      <AddConnection />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\nimport Connections from \"./Connections\";\r\nconst {\r\n  REACT_APP_API_URL = \"https://port-contact-server.herokuapp.com\",\r\n} = process.env;\r\n\r\nexport default function NavBar() {\r\n  let history = useHistory();\r\n  const { user, setUser } = useSession();\r\n\r\n  const handleLogout = () => {\r\n    fetch(REACT_APP_API_URL + \"/logout\", {\r\n      credentials: \"include\",\r\n      \"Access-Control-Allow-Origin\":\r\n        \"https://port-contact-server.herokuapp.com\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          setUser(null);\r\n          history.push(\"/\");\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-nav\">\r\n      {user && <Connections />}\r\n      <Link to=\"/\">\r\n        <h1 className=\"app-title\">Private Alpha v0.01</h1>\r\n      </Link>\r\n      {user && (\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n          Log out\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import io from \"socket.io-client\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children }) {\r\n  // const [socket, setSocket] = useState();\r\n\r\n  //   const { user, setUser, conversation, setConversation } = useSession();\r\n\r\n  const socket = io();\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\nimport { useSocket } from \"../Context/SocketProvider\";\r\n\r\nconst {\r\n  REACT_APP_API_URL = \"https://port-contact-server.herokuapp.com\",\r\n} = process.env;\r\n\r\nexport default function Chat(props) {\r\n  const history = useHistory();\r\n  const { user, setUser, conversation, setConversation } = useSession();\r\n  const chatLog = useRef();\r\n  const chatBottom = useRef();\r\n  const messageRef = useRef();\r\n  const [chatHeight, setChatHeight] = useState(\"\");\r\n  const socket = useSocket();\r\n\r\n  socket.on(\"new message\", function (newMessage) {\r\n    setConversation(\r\n      setConversation((prev) => {\r\n        conversation.messages = [...prev.messages, newMessage];\r\n      })\r\n    );\r\n  });\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatBottom.current) {\r\n      chatBottom.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      fetch(REACT_APP_API_URL + \"/\", {\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        \"Access-Control-Allow-Origin\":\r\n          \"https://port-contact-server.herokuapp.com\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.authenticated === false) {\r\n            console.log(\"Start session to enter chat.\");\r\n            history.push(\"/\");\r\n          } else {\r\n            console.log(`Authorized user: ${res.user}`);\r\n            setUser(res.user);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let windowHeight = window.innerHeight;\r\n    setChatHeight(`${windowHeight - 180}px`);\r\n    scrollToBottom();\r\n  }, [conversation]);\r\n\r\n  const handleMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!messageRef.current[\"message\"].value) {\r\n      return;\r\n    }\r\n\r\n    const messageData = {\r\n      senderId: user._id,\r\n      recipientId: conversation.connection._id,\r\n      content: messageRef.current[\"message\"].value,\r\n    };\r\n\r\n    socket.emit(\"new message\", messageData);\r\n\r\n    // fetch(REACT_APP_API_URL + \"/messages/\" + conversation.connection._id, {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(messageData),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((res) =>\r\n    //     setConversation((prev) => {\r\n    //       conversation.messages = [...prev.messages, res.newMessage];\r\n    //     })\r\n    //   );\r\n\r\n    messageRef.current[\"message\"].value = \"\";\r\n  };\r\n\r\n  const deleteMessage = (m, index) => {\r\n    fetch(REACT_APP_API_URL + \"/messages\", {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(m),\r\n    });\r\n\r\n    chatLog.current.children[index].classList.add(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user && (\r\n        <div className=\"Chat\">\r\n          <div\r\n            className=\"chat-log\"\r\n            style={{ height: chatHeight }}\r\n            ref={chatLog}\r\n          >\r\n            {conversation &&\r\n              conversation.messages.map((m, index) => (\r\n                <div\r\n                  id={index}\r\n                  className={\r\n                    user._id === m.senderId\r\n                      ? \"my-message-line\"\r\n                      : \"their-message-line\"\r\n                  }\r\n                >\r\n                  <div\r\n                    className={\r\n                      user._id === m.senderId ? \"my-message\" : \"their-message\"\r\n                    }\r\n                    onClick={() => deleteMessage(m, index)}\r\n                  >\r\n                    {m.content}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            <div ref={chatBottom}></div>\r\n          </div>\r\n\r\n          <form onSubmit={handleMessage} id=\"message-form\" ref={messageRef}>\r\n            <input\r\n              name=\"message\"\r\n              type=\"text\"\r\n              placeholder=\"Gotta xat fast\"\r\n              autoComplete=\"off\"\r\n            ></input>\r\n            <button type=\"submit\" className=\"material-icons\">\r\n              flash_on\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function Register() {\r\n  let history = useHistory();\r\n  const registerFormRef = useRef();\r\n  const { setUser } = useSession();\r\n  // const { auth, setAuth } = useContext(AuthContext);\r\n\r\n  // HTML FORM SEND\r\n  // <Form action=\"/subdomain\" method=\"post\">\r\n  // <input type=\"text\" name=\"username\"/>\r\n\r\n  const registerNewUser = (e) => {\r\n    e.preventDefault();\r\n    //Check all fields are correctly filled out\r\n\r\n    const userData = {\r\n      username: registerFormRef.current[\"username\"].value,\r\n      email: registerFormRef.current[\"email\"].value,\r\n      password: registerFormRef.current[\"password\"].value,\r\n    };\r\n\r\n    console.log(userData);\r\n\r\n    fetch(\"https://port-contact-server.herokuapp.com/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      \"Access-Control-Allow-Origin\":\r\n        \"https://port-contact-server.herokuapp.com\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          setUser(res.user);\r\n          history.push(\"/chat\");\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    registerFormRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"register-form\"\r\n      ref={registerFormRef}\r\n      onSubmit={registerNewUser}\r\n    >\r\n      <h2>New user</h2>\r\n      <div>\r\n        port.contact/\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          required\r\n        ></input>\r\n      </div>\r\n\r\n      <input type=\"email\" name=\"email\" placeholder=\"E-mail\" required></input>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        required\r\n      ></input>\r\n      <button type=\"submit\">Create</button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useSession } from \"../Context/SessionContext\";\r\n\r\nexport default function LogIn() {\r\n  const { setUser } = useSession();\r\n  // const { auth, setAuth } = useContext(AuthContext);\r\n  const logInFormRef = useRef();\r\n  const history = useHistory();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    //Check all fields are correctly filled out\r\n\r\n    const loginData = {\r\n      username: logInFormRef.current[\"username\"].value,\r\n      password: logInFormRef.current[\"password\"].value,\r\n    };\r\n    console.log(loginData);\r\n\r\n    fetch(\"https://port-contact-server.herokuapp.com/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(loginData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      \"Access-Control-Allow-Origin\":\r\n        \"https://port-contact-server.herokuapp.com\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          console.log(res.user);\r\n          // console.log(`Logged in user: ${res.user}`);\r\n          setUser(res.user);\r\n          history.push(\"/chat\");\r\n        } else {\r\n          console.log(res.message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    logInFormRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" ref={logInFormRef} onSubmit={handleLogin}>\r\n      <h2>Login</h2>\r\n      <input type=\"text\" name=\"username\" placeholder=\"Username\"></input>\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\"></input>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NavBar from \"./Components/NavBar\";\nimport Chat from \"./Components/Chat\";\nimport Register from \"./Components/Register\";\nimport LogIn from \"./Components/LogIn\";\nimport { SessionProvider } from \"./Context/SessionContext\";\nimport { SocketProvider } from \"./Context/SocketProvider\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SocketProvider>\n        <SessionProvider>\n          <NavBar />\n          <Route exact path=\"/\">\n            <div className=\"user-selection\">\n              <LogIn />\n              <Register />\n            </div>\n          </Route>\n          <Route exact path=\"/chat\">\n            <Chat />\n          </Route>\n        </SessionProvider>\n      </SocketProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}